{"mappings":"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AQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,QAELY,EAAiB,CACrB,CAAC,MAAS,OAAU,CAAC,MAAS,OAC9B,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,MAAS,OAAU,CAAC,MAAS,OAAU,CAAC,MAAS,OAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,QAAU,CAAC,OAAS,QAClD,CAAC,OAAS,QAAU,CAAC,OAAS,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","sources":["node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/DecorationService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/webpack/startup","node_modules/xterm-addon-attach/lib/webpack:/AttachAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-attach/lib/webpack:/AttachAddon/webpack/bootstrap","node_modules/xterm-addon-attach/lib/webpack:/AttachAddon/src/AttachAddon.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/bootstrap","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/startup","node_modules/xterm-addon-serialize/lib/webpack:/SerializeAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-serialize/lib/webpack:/SerializeAddon/webpack/startup","node_modules/xterm-addon-serialize/lib/webpack:/SerializeAddon/src/SerializeAddon.ts","node_modules/xterm-addon-unicode11/lib/webpack:/Unicode11Addon/webpack/universalModuleDefinition","node_modules/xterm-addon-unicode11/lib/webpack:/Unicode11Addon/src/UnicodeV11.ts","node_modules/xterm-addon-unicode11/lib/webpack:/src/common/TypedArrayUtils.ts","node_modules/xterm-addon-unicode11/lib/webpack:/Unicode11Addon/webpack/bootstrap","node_modules/xterm-addon-unicode11/lib/webpack:/Unicode11Addon/src/Unicode11Addon.ts","node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinkProvider.ts","node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/bootstrap","node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinksAddon.ts","public/terminal.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService, IDecorationService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'browser/services/DecorationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  public decorationService: IDecorationService;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.decorationService = this.register(this._instantiationService.createInstance(DecorationService));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    this.decorationService.attachToDom(this.screenElement, this._renderService, this._bufferService);\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this.decorationService!.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.rawOptions.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.rawOptions.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDecorationService, IRenderService } from 'browser/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService } from 'common/services/Services';\nimport { IDecorationOptions, IDecoration, IMarker } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n\n  private readonly _decorations: Decoration[] = [];\n  private _container: HTMLElement | undefined;\n  private _screenElement: HTMLElement | undefined;\n  private _renderService: IRenderService | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(@IInstantiationService private readonly _instantiationService: IInstantiationService) { super(); }\n\n  public attachToDom(screenElement: HTMLElement, renderService: IRenderService): void {\n    this._renderService = renderService;\n    this._screenElement = screenElement;\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    screenElement.appendChild(this._container);\n    this.register(this._renderService.onRenderedBufferChange(() => this.refresh()));\n    this.register(this._renderService.onDimensionsChange(() => this.refresh(true)));\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    if (decorationOptions.marker.isDisposed || !this._container) {\n      return undefined;\n    }\n    const decoration = this._instantiationService.createInstance(Decoration, decorationOptions, this._container);\n    this._decorations.push(decoration);\n    decoration.onDispose(() => this._decorations.splice(this._decorations.indexOf(decoration), 1));\n    this._queueRefresh();\n    return decoration;\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.refresh();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refresh(shouldRecreate?: boolean): void {\n    if (!this._renderService) {\n      return;\n    }\n    for (const decoration of this._decorations) {\n      decoration.render(this._renderService, shouldRecreate);\n    }\n  }\n\n  public dispose(): void {\n    for (const decoration of this._decorations) {\n      decoration.dispose();\n    }\n    if (this._screenElement && this._container && this._screenElement.contains(this._container)) {\n      this._screenElement.removeChild(this._container);\n    }\n  }\n}\nexport class Decoration extends Disposable implements IDecoration {\n  private readonly _marker: IMarker;\n  private _element: HTMLElement | undefined;\n\n  public isDisposed: boolean = false;\n\n  public get element(): HTMLElement | undefined { return this._element; }\n  public get marker(): IMarker { return this._marker; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  private _onRender = new EventEmitter<HTMLElement>();\n  public get onRender(): IEvent<HTMLElement> { return this._onRender.event; }\n\n  public x: number;\n  public anchor: 'left' | 'right';\n  public width: number;\n  public height: number;\n\n  constructor(\n    options: IDecorationOptions,\n    private readonly _container: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.x = options.x ?? 0;\n    this._marker = options.marker;\n    this._marker.onDispose(() => this.dispose());\n    this.anchor = options.anchor || 'left';\n    this.width = options.width || 1;\n    this.height = options.height || 1;\n  }\n\n  public render(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (!this._element || shouldRecreate) {\n      this._createElement(renderService, shouldRecreate);\n    }\n    if (this._container && this._element && !this._container.contains(this._element)) {\n      this._container.append(this._element);\n    }\n    this._refreshStyle(renderService);\n    if (this._element) {\n      this._onRender.fire(this._element);\n    }\n  }\n\n  private _createElement(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (shouldRecreate && this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this._element = document.createElement('div');\n    this._element.classList.add('xterm-decoration');\n    this._element.style.width = `${this.width * renderService.dimensions.actualCellWidth}px`;\n    this._element.style.height = `${this.height * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.top = `${(this.marker.line - this._bufferService.buffers.active.ydisp) * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.lineHeight = `${renderService.dimensions.actualCellHeight}px`;\n\n    if (this.x && this.x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      this._element.style.display = 'none';\n    }\n    if (this.anchor === 'right') {\n      this._element.style.right = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      this._element.style.left = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _refreshStyle(renderService: IRenderService): void {\n    if (!this._element) {\n      return;\n    }\n    const line = this.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line > this._bufferService.rows) {\n      // outside of viewport\n      this._element.style.display = 'none';\n    } else {\n      this._element.style.top = `${line * renderService.dimensions.actualCellHeight}px`;\n      this._element.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }\n  }\n\n  public override dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    if (this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this.isDisposed = true;\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  refresh(): void;\n  attachToDom(screenElement: HTMLElement, renderService: IRenderService, bufferService: IBufferService): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public clearMarkers(y?: number): void {\n    this._isClearing = true;\n    if (y !== undefined) {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].line === y) {\n          this.markers[i].dispose();\n          this.markers.splice(i--, 1);\n        }\n      }\n    } else {\n      for (const marker of this.markers) {\n        marker.dispose();\n      }\n      this.markers = [];\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AttachAddon\"] = factory();\n\telse\n\t\troot[\"AttachAddon\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Copyright (c) 2014, 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * Implements the attach method, that attaches the terminal to a WebSocket stream.\n */\n\nimport { Terminal, IDisposable, ITerminalAddon } from 'xterm';\n\ninterface IAttachOptions {\n  bidirectional?: boolean;\n}\n\nexport class AttachAddon implements ITerminalAddon {\n  private _socket: WebSocket;\n  private _bidirectional: boolean;\n  private _disposables: IDisposable[] = [];\n\n  constructor(socket: WebSocket, options?: IAttachOptions) {\n    this._socket = socket;\n    // always set binary type to arraybuffer, we do not handle blobs\n    this._socket.binaryType = 'arraybuffer';\n    this._bidirectional = (options && options.bidirectional === false) ? false : true;\n  }\n\n  public activate(terminal: Terminal): void {\n    this._disposables.push(\n      addSocketListener(this._socket, 'message', ev => {\n        const data: ArrayBuffer | string = ev.data;\n        terminal.write(typeof data === 'string' ? data : new Uint8Array(data));\n      })\n    );\n\n    if (this._bidirectional) {\n      this._disposables.push(terminal.onData(data => this._sendData(data)));\n      this._disposables.push(terminal.onBinary(data => this._sendBinary(data)));\n    }\n\n    this._disposables.push(addSocketListener(this._socket, 'close', () => this.dispose()));\n    this._disposables.push(addSocketListener(this._socket, 'error', () => this.dispose()));\n  }\n\n  public dispose(): void {\n    this._disposables.forEach(d => d.dispose());\n  }\n\n  private _sendData(data: string): void {\n    // TODO: do something better than just swallowing\n    // the data if the socket is not in a working condition\n    if (this._socket.readyState !== 1) {\n      return;\n    }\n    this._socket.send(data);\n  }\n\n  private _sendBinary(data: string): void {\n    if (this._socket.readyState !== 1) {\n      return;\n    }\n    const buffer = new Uint8Array(data.length);\n    for (let i = 0; i < data.length; ++i) {\n      buffer[i] = data.charCodeAt(i) & 255;\n    }\n    this._socket.send(buffer);\n  }\n}\n\nfunction addSocketListener<K extends keyof WebSocketEventMap>(socket: WebSocket, type: K, handler: (this: WebSocket, ev: WebSocketEventMap[K]) => any): IDisposable {\n  socket.addEventListener(type, handler);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      socket.removeEventListener(type, handler);\n    }\n  };\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SerializeAddon\"] = factory();\n\telse\n\t\troot[\"SerializeAddon\"] = factory();\n})(this, function() {\nreturn ","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[44](0, __webpack_exports__);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * (EXPERIMENTAL) This Addon is still under development\n */\n\nimport { Terminal, ITerminalAddon, IBuffer, IBufferCell, IBufferRange } from 'xterm';\nimport { IColorSet } from 'browser/Types';\n\nfunction constrain(value: number, low: number, high: number): number {\n  return Math.max(low, Math.min(value, high));\n}\n\n// TODO: Refine this template class later\nabstract class BaseSerializeHandler {\n  constructor(\n    protected readonly _buffer: IBuffer\n  ) {\n  }\n\n  public serialize(range: IBufferRange): string {\n    // we need two of them to flip between old and new cell\n    const cell1 = this._buffer.getNullCell();\n    const cell2 = this._buffer.getNullCell();\n    let oldCell = cell1;\n\n    const startRow = range.start.x;\n    const endRow = range.end.x;\n    const startColumn = range.start.y;\n    const endColumn = range.end.y;\n\n    this._beforeSerialize(endRow - startRow, startRow, endRow);\n\n    for (let row = startRow; row <= endRow; row++) {\n      const line = this._buffer.getLine(row);\n      if (line) {\n        const startLineColumn = row !== range.start.x ? 0 : startColumn;\n        const endLineColumn = row !== range.end.x ? line.length : endColumn;\n        for (let col = startLineColumn; col < endLineColumn; col++) {\n          const c = line.getCell(col, oldCell === cell1 ? cell2 : cell1);\n          if (!c) {\n            console.warn(`Can't get cell at row=${row}, col=${col}`);\n            continue;\n          }\n          this._nextCell(c, oldCell, row, col);\n          oldCell = c;\n        }\n      }\n      this._rowEnd(row, row === endRow);\n    }\n\n    this._afterSerialize();\n\n    return this._serializeString();\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void { }\n  protected _rowEnd(row: number, isLastRow: boolean): void { }\n  protected _beforeSerialize(rows: number, startRow: number, endRow: number): void { }\n  protected _afterSerialize(): void { }\n  protected _serializeString(): string { return ''; }\n}\n\nfunction equalFg(cell1: IBufferCell, cell2: IBufferCell): boolean {\n  return cell1.getFgColorMode() === cell2.getFgColorMode()\n    && cell1.getFgColor() === cell2.getFgColor();\n}\n\nfunction equalBg(cell1: IBufferCell, cell2: IBufferCell): boolean {\n  return cell1.getBgColorMode() === cell2.getBgColorMode()\n    && cell1.getBgColor() === cell2.getBgColor();\n}\n\nfunction equalFlags(cell1: IBufferCell, cell2: IBufferCell): boolean {\n  return cell1.isInverse() === cell2.isInverse()\n    && cell1.isBold() === cell2.isBold()\n    && cell1.isUnderline() === cell2.isUnderline()\n    && cell1.isBlink() === cell2.isBlink()\n    && cell1.isInvisible() === cell2.isInvisible()\n    && cell1.isItalic() === cell2.isItalic()\n    && cell1.isDim() === cell2.isDim()\n    && cell1.isStrikethrough() === cell2.isStrikethrough();\n}\n\nclass StringSerializeHandler extends BaseSerializeHandler {\n  private _rowIndex: number = 0;\n  private _allRows: string[] = new Array<string>();\n  private _allRowSeparators: string[] = new Array<string>();\n  private _currentRow: string = '';\n  private _nullCellCount: number = 0;\n\n  // we can see a full colored cell and a null cell that only have background the same style\n  // but the information isn't preserved by null cell itself\n  // so wee need to record it when required.\n  private _cursorStyle: IBufferCell = this._buffer.getNullCell();\n\n  // where exact the cursor styles comes from\n  // because we can't copy the cell directly\n  // so we remember where the content comes from instead\n  private _cursorStyleRow: number = 0;\n  private _cursorStyleCol: number = 0;\n\n  // this is a null cell for reference for checking whether background is empty or not\n  private _backgroundCell: IBufferCell = this._buffer.getNullCell();\n\n  private _firstRow: number = 0;\n  private _lastCursorRow: number = 0;\n  private _lastCursorCol: number = 0;\n  private _lastContentCursorRow: number = 0;\n  private _lastContentCursorCol: number = 0;\n\n  constructor(\n    buffer: IBuffer,\n    private readonly _terminal: Terminal\n  ) {\n    super(buffer);\n  }\n\n  protected _beforeSerialize(rows: number, start: number, end: number): void {\n    this._allRows = new Array<string>(rows);\n    this._lastContentCursorRow = start;\n    this._lastCursorRow = start;\n    this._firstRow = start;\n  }\n\n  private _thisRowLastChar: IBufferCell = this._buffer.getNullCell();\n  private _thisRowLastSecondChar: IBufferCell = this._buffer.getNullCell();\n  private _nextRowFirstChar: IBufferCell = this._buffer.getNullCell();\n  protected _rowEnd(row: number, isLastRow: boolean): void {\n    // if there is colorful empty cell at line end, whe must pad it back, or the the color block will missing\n    if (this._nullCellCount > 0 && !equalBg(this._cursorStyle, this._backgroundCell)) {\n      // use clear right to set background.\n      this._currentRow += `\\u001b[${this._nullCellCount}X`;\n    }\n\n    let rowSeparator = '';\n\n    // handle row separator\n    if (!isLastRow) {\n      // Enable BCE\n      if (row - this._firstRow >= this._terminal.rows) {\n        this._buffer.getLine(this._cursorStyleRow)?.getCell(this._cursorStyleCol, this._backgroundCell);\n      }\n\n      // Fetch current line\n      const currentLine = this._buffer.getLine(row)!;\n      // Fetch next line\n      const nextLine = this._buffer.getLine(row + 1)!;\n\n      if (!nextLine.isWrapped) {\n        // just insert the line break\n        rowSeparator = '\\r\\n';\n        // we sended the enter\n        this._lastCursorRow = row + 1;\n        this._lastCursorCol = 0;\n      } else {\n        rowSeparator = '';\n        const thisRowLastChar = currentLine.getCell(currentLine.length - 1, this._thisRowLastChar)!;\n        const thisRowLastSecondChar = currentLine.getCell(currentLine.length - 2, this._thisRowLastSecondChar)!;\n        const nextRowFirstChar = nextLine.getCell(0, this._nextRowFirstChar)!;\n        const isNextRowFirstCharDoubleWidth = nextRowFirstChar.getWidth() > 1;\n\n        // validate whether this line wrap is ever possible\n        // which mean whether cursor can placed at a overflow position (x === row) naturally\n        let isValid = false;\n\n        if (\n          // you must output character to cause overflow, control sequence can't do this\n          nextRowFirstChar.getChars() &&\n            isNextRowFirstCharDoubleWidth ? this._nullCellCount <= 1 : this._nullCellCount <= 0\n        ) {\n          if (\n            // the last character can't be null,\n            // you can't use control sequence to move cursor to (x === row)\n            (thisRowLastChar.getChars() || thisRowLastChar.getWidth() === 0) &&\n            // change background of the first wrapped cell also affects BCE\n            // so we mark it as invalid to simply the process to determine line separator\n            equalBg(thisRowLastChar, nextRowFirstChar)\n          ) {\n            isValid = true;\n          }\n\n          if (\n            // the second to last character can't be null if the next line starts with CJK,\n            // you can't use control sequence to move cursor to (x === row)\n            isNextRowFirstCharDoubleWidth &&\n            (thisRowLastSecondChar.getChars() || thisRowLastSecondChar.getWidth() === 0) &&\n            // change background of the first wrapped cell also affects BCE\n            // so we mark it as invalid to simply the process to determine line separator\n            equalBg(thisRowLastChar, nextRowFirstChar) &&\n            equalBg(thisRowLastSecondChar, nextRowFirstChar)\n          ) {\n            isValid = true;\n          }\n        }\n\n        if (!isValid) {\n          // force the wrap with magic\n          // insert enough character to force the wrap\n          rowSeparator = '-'.repeat(this._nullCellCount + 1);\n          // move back and erase next line head\n          rowSeparator += '\\u001b[1D\\u001b[1X';\n\n          if (this._nullCellCount > 0) {\n            // do these because we filled the last several null slot, which we shouldn't\n            rowSeparator += '\\u001b[A';\n            rowSeparator += `\\u001b[${currentLine.length - this._nullCellCount}C`;\n            rowSeparator += `\\u001b[${this._nullCellCount}X`;\n            rowSeparator += `\\u001b[${currentLine.length - this._nullCellCount}D`;\n            rowSeparator += '\\u001b[B';\n          }\n\n          // This is content and need the be serialized even it is invisible.\n          // without this, wrap will be missing from outputs.\n          this._lastContentCursorRow = row + 1;\n          this._lastContentCursorCol = 0;\n\n          // force commit the cursor position\n          this._lastCursorRow = row + 1;\n          this._lastCursorCol = 0;\n        }\n      }\n    }\n\n    this._allRows[this._rowIndex] = this._currentRow;\n    this._allRowSeparators[this._rowIndex++] = rowSeparator;\n    this._currentRow = '';\n    this._nullCellCount = 0;\n  }\n\n  private _diffStyle(cell: IBufferCell, oldCell: IBufferCell): number[] {\n    const sgrSeq: number[] = [];\n    const fgChanged = !equalFg(cell, oldCell);\n    const bgChanged = !equalBg(cell, oldCell);\n    const flagsChanged = !equalFlags(cell, oldCell);\n\n    if (fgChanged || bgChanged || flagsChanged) {\n      if (cell.isAttributeDefault()) {\n        if (!oldCell.isAttributeDefault()) {\n          sgrSeq.push(0);\n        }\n      } else {\n        if (fgChanged) {\n          const color = cell.getFgColor();\n          if (cell.isFgRGB()) { sgrSeq.push(38, 2, (color >>> 16) & 0xFF, (color >>> 8) & 0xFF, color & 0xFF); }\n          else if (cell.isFgPalette()) {\n            if (color >= 16) { sgrSeq.push(38, 5, color); }\n            else { sgrSeq.push(color & 8 ? 90 + (color & 7) : 30 + (color & 7)); }\n          }\n          else { sgrSeq.push(39); }\n        }\n        if (bgChanged) {\n          const color = cell.getBgColor();\n          if (cell.isBgRGB()) { sgrSeq.push(48, 2, (color >>> 16) & 0xFF, (color >>> 8) & 0xFF, color & 0xFF); }\n          else if (cell.isBgPalette()) {\n            if (color >= 16) { sgrSeq.push(48, 5, color); }\n            else { sgrSeq.push(color & 8 ? 100 + (color & 7) : 40 + (color & 7)); }\n          }\n          else { sgrSeq.push(49); }\n        }\n        if (flagsChanged) {\n          if (cell.isInverse() !== oldCell.isInverse()) { sgrSeq.push(cell.isInverse() ? 7 : 27); }\n          if (cell.isBold() !== oldCell.isBold()) { sgrSeq.push(cell.isBold() ? 1 : 22); }\n          if (cell.isUnderline() !== oldCell.isUnderline()) { sgrSeq.push(cell.isUnderline() ? 4 : 24); }\n          if (cell.isBlink() !== oldCell.isBlink()) { sgrSeq.push(cell.isBlink() ? 5 : 25); }\n          if (cell.isInvisible() !== oldCell.isInvisible()) { sgrSeq.push(cell.isInvisible() ? 8 : 28); }\n          if (cell.isItalic() !== oldCell.isItalic()) { sgrSeq.push(cell.isItalic() ? 3 : 23); }\n          if (cell.isDim() !== oldCell.isDim()) { sgrSeq.push(cell.isDim() ? 2 : 22); }\n          if (cell.isStrikethrough() !== oldCell.isStrikethrough()) { sgrSeq.push(cell.isStrikethrough() ? 9 : 29); }\n        }\n      }\n    }\n\n    return sgrSeq;\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void {\n    // a width 0 cell don't need to be count because it is just a placeholder after a CJK character;\n    const isPlaceHolderCell = cell.getWidth() === 0;\n\n    if (isPlaceHolderCell) {\n      return;\n    }\n\n    // this cell don't have content\n    const isEmptyCell = cell.getChars() === '';\n\n    const sgrSeq = this._diffStyle(cell, this._cursorStyle);\n\n    // the empty cell style is only assumed to be changed when background changed, because foreground is always 0.\n    const styleChanged = isEmptyCell ? !equalBg(this._cursorStyle, cell) : sgrSeq.length > 0;\n\n    /**\n     *  handles style change\n     */\n    if (styleChanged) {\n      // before update the style, we need to fill empty cell back\n      if (this._nullCellCount > 0) {\n        // use clear right to set background.\n        if (!equalBg(this._cursorStyle, this._backgroundCell)) {\n          this._currentRow += `\\u001b[${this._nullCellCount}X`;\n        }\n        // use move right to move cursor.\n        this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        this._nullCellCount = 0;\n      }\n\n      this._lastContentCursorRow = this._lastCursorRow = row;\n      this._lastContentCursorCol = this._lastCursorCol = col;\n\n      this._currentRow += `\\u001b[${sgrSeq.join(';')}m`;\n\n      // update the last cursor style\n      const line = this._buffer.getLine(row);\n      if (line !== undefined) {\n        line.getCell(col, this._cursorStyle);\n        this._cursorStyleRow = row;\n        this._cursorStyleCol = col;\n      }\n    }\n\n    /**\n     *  handles actual content\n     */\n    if (isEmptyCell) {\n      this._nullCellCount += cell.getWidth();\n    } else {\n      if (this._nullCellCount > 0) {\n        // we can just assume we have same style with previous one here\n        // because style change is handled by previous stage\n        // use move right when background is empty, use clear right when there is background.\n        if (equalBg(this._cursorStyle, this._backgroundCell)) {\n          this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        } else {\n          this._currentRow += `\\u001b[${this._nullCellCount}X`;\n          this._currentRow += `\\u001b[${this._nullCellCount}C`;\n        }\n        this._nullCellCount = 0;\n      }\n\n      this._currentRow += cell.getChars();\n\n      // update cursor\n      this._lastContentCursorRow = this._lastCursorRow = row;\n      this._lastContentCursorCol = this._lastCursorCol = col + cell.getWidth();\n    }\n  }\n\n  protected _serializeString(): string {\n    let rowEnd = this._allRows.length;\n\n    // the fixup is only required for data without scrollback\n    // because it will always be placed at last line otherwise\n    if (this._buffer.length - this._firstRow <= this._terminal.rows) {\n      rowEnd = this._lastContentCursorRow + 1 - this._firstRow;\n      this._lastCursorCol = this._lastContentCursorCol;\n      this._lastCursorRow = this._lastContentCursorRow;\n    }\n\n    let content = '';\n\n    for (let i = 0; i < rowEnd; i++) {\n      content += this._allRows[i];\n      if (i + 1 < rowEnd) {\n        content += this._allRowSeparators[i];\n      }\n    }\n\n    // restore the cursor\n    const realCursorRow = this._buffer.baseY + this._buffer.cursorY;\n    const realCursorCol = this._buffer.cursorX;\n\n    const cursorMoved = (realCursorRow !== this._lastCursorRow || realCursorCol !== this._lastCursorCol);\n\n    const moveRight = (offset: number): void => {\n      if (offset > 0) {\n        content += `\\u001b[${offset}C`;\n      } else if (offset < 0) {\n        content += `\\u001b[${-offset}D`;\n      }\n    };\n    const moveDown = (offset: number): void => {\n      if (offset > 0) {\n        content += `\\u001b[${offset}B`;\n      } else if (offset < 0) {\n        content += `\\u001b[${-offset}A`;\n      }\n    };\n\n    if (cursorMoved) {\n      moveDown(realCursorRow - this._lastCursorRow);\n      moveRight(realCursorCol - this._lastCursorCol);\n    }\n\n    return content;\n  }\n}\n\nexport class SerializeAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() { }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  private _serializeBuffer(terminal: Terminal, buffer: IBuffer, scrollback?: number): string {\n    const maxRows = buffer.length;\n    const handler = new StringSerializeHandler(buffer, terminal);\n    const correctRows = (scrollback === undefined) ? maxRows : constrain(scrollback + terminal.rows, 0, maxRows);\n    return handler.serialize({\n      start: { x: maxRows - correctRows, y: 0 },\n      end: { x: maxRows - 1, y: terminal.cols }\n    });\n  }\n\n  private _serializeBufferAsHTML(terminal: Terminal, options: Partial<IHTMLSerializeOptions>): string {\n    const buffer = terminal.buffer.active;\n    const handler = new HTMLSerializeHandler(buffer, terminal, options);\n    const onlySelection = options.onlySelection ?? false;\n    if (!onlySelection) {\n      const maxRows = buffer.length;\n      const scrollback = options.scrollback;\n      const correctRows = (scrollback === undefined) ? maxRows : constrain(scrollback + terminal.rows, 0, maxRows);\n      return handler.serialize({\n        start: { x: maxRows - correctRows, y: 0 },\n        end: { x: maxRows - 1, y: terminal.cols }\n      });\n    }\n\n    const selection = this._terminal?.getSelectionPosition();\n    if (selection !== undefined) {\n      return handler.serialize({\n        start: { x: selection.startRow, y: selection.startColumn },\n        end: { x: selection.endRow, y: selection.endColumn }\n      });\n    }\n\n    return '';\n  }\n\n  private _serializeModes(terminal: Terminal): string {\n    let content = '';\n    const modes = terminal.modes;\n\n    // Default: false\n    if (modes.applicationCursorKeysMode) content += '\\x1b[?1h';\n    if (modes.applicationKeypadMode) content += '\\x1b[?66h';\n    if (modes.bracketedPasteMode) content += '\\x1b[?2004h';\n    if (modes.insertMode) content += '\\x1b[4h';\n    if (modes.originMode) content += '\\x1b[?6h';\n    if (modes.reverseWraparoundMode) content += '\\x1b[?45h';\n    if (modes.sendFocusMode) content += '\\x1b[?1004h';\n\n    // Default: true\n    if (modes.wraparoundMode === false) content += '\\x1b[?7l';\n\n    // Default: 'none'\n    if (modes.mouseTrackingMode !== 'none') {\n      switch (modes.mouseTrackingMode) {\n        case 'x10': content += '\\x1b[?9h'; break;\n        case 'vt200': content += '\\x1b[?1000h'; break;\n        case 'drag': content += '\\x1b[?1002h'; break;\n        case 'any': content += '\\x1b[?1003h'; break;\n      }\n    }\n\n    return content;\n  }\n\n  public serialize(options?: ISerializeOptions): string {\n    // TODO: Add combinedData support\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    // Normal buffer\n    let content = this._serializeBuffer(this._terminal, this._terminal.buffer.normal, options?.scrollback);\n\n    // Alternate buffer\n    if (!options?.excludeAltBuffer) {\n      if (this._terminal.buffer.active.type === 'alternate') {\n        const alternativeScreenContent = this._serializeBuffer(this._terminal, this._terminal.buffer.alternate, undefined);\n        content += `\\u001b[?1049h\\u001b[H${alternativeScreenContent}`;\n      }\n    }\n\n    // Modes\n    if (!options?.excludeModes) {\n      content += this._serializeModes(this._terminal);\n    }\n\n    return content;\n  }\n\n  public serializeAsHTML(options?: Partial<IHTMLSerializeOptions>): string {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    return this._serializeBufferAsHTML(this._terminal, options || {});\n  }\n\n  public dispose(): void { }\n}\n\n\ninterface ISerializeOptions {\n  scrollback?: number;\n  excludeModes?: boolean;\n  excludeAltBuffer?: boolean;\n}\n\ninterface IHTMLSerializeOptions {\n  scrollback: number;\n  onlySelection: boolean;\n  includeGlobalBackground: boolean;\n}\n\nexport class HTMLSerializeHandler extends BaseSerializeHandler {\n  private _currentRow: string = '';\n\n  private _htmlContent = '';\n\n  private _colors: IColorSet;\n\n  constructor(\n    buffer: IBuffer,\n    private readonly _terminal: Terminal,\n    private readonly _options: Partial<IHTMLSerializeOptions>\n  ) {\n    super(buffer);\n\n    // https://github.com/xtermjs/xterm.js/issues/3601\n    this._colors = (_terminal as any)._core._colorManager.colors;\n  }\n\n  private _padStart(target: string, targetLength: number, padString: string): string {\n    targetLength = targetLength >> 0;\n    padString = padString ?? ' ';\n    if (target.length > targetLength) {\n      return target;\n    }\n\n    targetLength = targetLength - target.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + target;\n  }\n\n  protected _beforeSerialize(rows: number, start: number, end: number): void {\n    this._htmlContent += '<html><body><!--StartFragment--><pre>';\n\n    let foreground = '#000000';\n    let background = '#ffffff';\n    if (this._options.includeGlobalBackground ?? false) {\n      foreground = this._terminal.options.theme?.foreground ?? '#ffffff';\n      background = this._terminal.options.theme?.background ?? '#000000';\n    }\n\n    const globalStyleDefinitions = [];\n    globalStyleDefinitions.push('color: ' + foreground + ';');\n    globalStyleDefinitions.push('background-color: ' + background + ';');\n    globalStyleDefinitions.push('font-family: ' + this._terminal.options.fontFamily + ';');\n    globalStyleDefinitions.push('font-size: ' + this._terminal.options.fontSize + 'px;');\n    this._htmlContent += '<div style=\\'' + globalStyleDefinitions.join(' ') + '\\'>';\n  }\n\n  protected _afterSerialize(): void {\n    this._htmlContent += '</div>';\n    this._htmlContent += '</pre><!--EndFragment--></body></html>';\n  }\n\n  protected _rowEnd(row: number, isLastRow: boolean): void {\n    this._htmlContent += '<div><span>' + this._currentRow + '</span></div>';\n    this._currentRow = '';\n  }\n\n  private _getHexColor(cell: IBufferCell, isFg: boolean): string | undefined {\n    const color = isFg ? cell.getFgColor() : cell.getBgColor();\n    if (isFg ? cell.isFgRGB() : cell.isBgRGB()) {\n      const rgb = [\n        (color >> 16) & 255,\n        (color >>  8) & 255,\n        (color      ) & 255\n      ];\n      return rgb.map(x => this._padStart(x.toString(16), 2, '0')).join('');\n    }\n    if (isFg ? cell.isFgPalette() : cell.isBgPalette()) {\n      return this._colors.ansi[color].css;\n    }\n    return undefined;\n  }\n\n  private _diffStyle(cell: IBufferCell, oldCell: IBufferCell): string[] | undefined {\n    const content: string[] = [];\n\n    const fgChanged = !equalFg(cell, oldCell);\n    const bgChanged = !equalBg(cell, oldCell);\n    const flagsChanged = !equalFlags(cell, oldCell);\n\n    if (fgChanged || bgChanged || flagsChanged) {\n      const fgHexColor = this._getHexColor(cell, true);\n      if (fgHexColor) {\n        content.push('color: ' + fgHexColor + ';');\n      }\n\n      const bgHexColor = this._getHexColor(cell, false);\n      if (bgHexColor) {\n        content.push('background-color: ' + bgHexColor + ';');\n      }\n\n      if (cell.isInverse()) { content.push('color: #000000; background-color: #BFBFBF;'); }\n      if (cell.isBold()) { content.push('font-weight: bold;'); }\n      if (cell.isUnderline()) { content.push('text-decoration: underline;'); }\n      if (cell.isBlink()) { content.push('text-decoration: blink;'); }\n      if (cell.isInvisible()) { content.push('visibility: hidden;'); }\n      if (cell.isItalic()) { content.push('font-style: italic;'); }\n      if (cell.isDim()) { content.push('opacity: 0.5;'); }\n      if (cell.isStrikethrough()) { content.push('text-decoration: line-through;'); }\n\n      return content;\n    }\n\n    return undefined;\n  }\n\n  protected _nextCell(cell: IBufferCell, oldCell: IBufferCell, row: number, col: number): void {\n    // a width 0 cell don't need to be count because it is just a placeholder after a CJK character;\n    const isPlaceHolderCell = cell.getWidth() === 0;\n    if (isPlaceHolderCell) {\n      return;\n    }\n\n    // this cell don't have content\n    const isEmptyCell = cell.getChars() === '';\n\n    const styleDefinitions = this._diffStyle(cell, oldCell);\n\n    // handles style change\n    if (styleDefinitions) {\n      this._currentRow += styleDefinitions.length === 0 ?\n        '</span><span>' :\n        '</span><span style=\\'' + styleDefinitions.join(' ') + '\\'>';\n    }\n\n    // handles actual content\n    if (isEmptyCell) {\n      this._currentRow += ' ';\n    } else {\n      this._currentRow += cell.getChars();\n    }\n  }\n\n  protected _serializeString(): string {\n    return this._htmlContent;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Unicode11Addon\"] = factory();\n\telse\n\t\troot[\"Unicode11Addon\"] = factory();\n})(this, function() {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IUnicodeVersionProvider } from 'xterm';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0489], [0x0591, 0x05BD],\n  [0x05BF, 0x05BF], [0x05C1, 0x05C2], [0x05C4, 0x05C5],\n  [0x05C7, 0x05C7], [0x0600, 0x0605], [0x0610, 0x061A],\n  [0x061C, 0x061C], [0x064B, 0x065F], [0x0670, 0x0670],\n  [0x06D6, 0x06DD], [0x06DF, 0x06E4], [0x06E7, 0x06E8],\n  [0x06EA, 0x06ED], [0x070F, 0x070F], [0x0711, 0x0711],\n  [0x0730, 0x074A], [0x07A6, 0x07B0], [0x07EB, 0x07F3],\n  [0x07FD, 0x07FD], [0x0816, 0x0819], [0x081B, 0x0823],\n  [0x0825, 0x0827], [0x0829, 0x082D], [0x0859, 0x085B],\n  [0x08D3, 0x0902], [0x093A, 0x093A], [0x093C, 0x093C],\n  [0x0941, 0x0948], [0x094D, 0x094D], [0x0951, 0x0957],\n  [0x0962, 0x0963], [0x0981, 0x0981], [0x09BC, 0x09BC],\n  [0x09C1, 0x09C4], [0x09CD, 0x09CD], [0x09E2, 0x09E3],\n  [0x09FE, 0x09FE], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A51, 0x0A51], [0x0A70, 0x0A71], [0x0A75, 0x0A75],\n  [0x0A81, 0x0A82], [0x0ABC, 0x0ABC], [0x0AC1, 0x0AC5],\n  [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD], [0x0AE2, 0x0AE3],\n  [0x0AFA, 0x0AFF], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B44], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B62, 0x0B63], [0x0B82, 0x0B82],\n  [0x0BC0, 0x0BC0], [0x0BCD, 0x0BCD], [0x0C00, 0x0C00],\n  [0x0C04, 0x0C04], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0C62, 0x0C63],\n  [0x0C81, 0x0C81], [0x0CBC, 0x0CBC], [0x0CBF, 0x0CBF],\n  [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD], [0x0CE2, 0x0CE3],\n  [0x0D00, 0x0D01], [0x0D3B, 0x0D3C], [0x0D41, 0x0D44],\n  [0x0D4D, 0x0D4D], [0x0D62, 0x0D63], [0x0DCA, 0x0DCA],\n  [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6], [0x0E31, 0x0E31],\n  [0x0E34, 0x0E3A], [0x0E47, 0x0E4E], [0x0EB1, 0x0EB1],\n  [0x0EB4, 0x0EBC], [0x0EC8, 0x0ECD], [0x0F18, 0x0F19],\n  [0x0F35, 0x0F35], [0x0F37, 0x0F37], [0x0F39, 0x0F39],\n  [0x0F71, 0x0F7E], [0x0F80, 0x0F84], [0x0F86, 0x0F87],\n  [0x0F8D, 0x0F97], [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6],\n  [0x102D, 0x1030], [0x1032, 0x1037], [0x1039, 0x103A],\n  [0x103D, 0x103E], [0x1058, 0x1059], [0x105E, 0x1060],\n  [0x1071, 0x1074], [0x1082, 0x1082], [0x1085, 0x1086],\n  [0x108D, 0x108D], [0x109D, 0x109D], [0x1160, 0x11FF],\n  [0x135D, 0x135F], [0x1712, 0x1714], [0x1732, 0x1734],\n  [0x1752, 0x1753], [0x1772, 0x1773], [0x17B4, 0x17B5],\n  [0x17B7, 0x17BD], [0x17C6, 0x17C6], [0x17C9, 0x17D3],\n  [0x17DD, 0x17DD], [0x180B, 0x180E], [0x1885, 0x1886],\n  [0x18A9, 0x18A9], [0x1920, 0x1922], [0x1927, 0x1928],\n  [0x1932, 0x1932], [0x1939, 0x193B], [0x1A17, 0x1A18],\n  [0x1A1B, 0x1A1B], [0x1A56, 0x1A56], [0x1A58, 0x1A5E],\n  [0x1A60, 0x1A60], [0x1A62, 0x1A62], [0x1A65, 0x1A6C],\n  [0x1A73, 0x1A7C], [0x1A7F, 0x1A7F], [0x1AB0, 0x1ABE],\n  [0x1B00, 0x1B03], [0x1B34, 0x1B34], [0x1B36, 0x1B3A],\n  [0x1B3C, 0x1B3C], [0x1B42, 0x1B42], [0x1B6B, 0x1B73],\n  [0x1B80, 0x1B81], [0x1BA2, 0x1BA5], [0x1BA8, 0x1BA9],\n  [0x1BAB, 0x1BAD], [0x1BE6, 0x1BE6], [0x1BE8, 0x1BE9],\n  [0x1BED, 0x1BED], [0x1BEF, 0x1BF1], [0x1C2C, 0x1C33],\n  [0x1C36, 0x1C37], [0x1CD0, 0x1CD2], [0x1CD4, 0x1CE0],\n  [0x1CE2, 0x1CE8], [0x1CED, 0x1CED], [0x1CF4, 0x1CF4],\n  [0x1CF8, 0x1CF9], [0x1DC0, 0x1DF9], [0x1DFB, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2064],\n  [0x2066, 0x206F], [0x20D0, 0x20F0], [0x2CEF, 0x2CF1],\n  [0x2D7F, 0x2D7F], [0x2DE0, 0x2DFF], [0x302A, 0x302D],\n  [0x3099, 0x309A], [0xA66F, 0xA672], [0xA674, 0xA67D],\n  [0xA69E, 0xA69F], [0xA6F0, 0xA6F1], [0xA802, 0xA802],\n  [0xA806, 0xA806], [0xA80B, 0xA80B], [0xA825, 0xA826],\n  [0xA8C4, 0xA8C5], [0xA8E0, 0xA8F1], [0xA8FF, 0xA8FF],\n  [0xA926, 0xA92D], [0xA947, 0xA951], [0xA980, 0xA982],\n  [0xA9B3, 0xA9B3], [0xA9B6, 0xA9B9], [0xA9BC, 0xA9BD],\n  [0xA9E5, 0xA9E5], [0xAA29, 0xAA2E], [0xAA31, 0xAA32],\n  [0xAA35, 0xAA36], [0xAA43, 0xAA43], [0xAA4C, 0xAA4C],\n  [0xAA7C, 0xAA7C], [0xAAB0, 0xAAB0], [0xAAB2, 0xAAB4],\n  [0xAAB7, 0xAAB8], [0xAABE, 0xAABF], [0xAAC1, 0xAAC1],\n  [0xAAEC, 0xAAED], [0xAAF6, 0xAAF6], [0xABE5, 0xABE5],\n  [0xABE8, 0xABE8], [0xABED, 0xABED], [0xFB1E, 0xFB1E],\n  [0xFE00, 0xFE0F], [0xFE20, 0xFE2F], [0xFEFF, 0xFEFF],\n  [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x101FD, 0x101FD], [0x102E0, 0x102E0],\n  [0x10376, 0x1037A], [0x10A01, 0x10A03], [0x10A05, 0x10A06],\n  [0x10A0C, 0x10A0F], [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F],\n  [0x10AE5, 0x10AE6], [0x10D24, 0x10D27], [0x10F46, 0x10F50],\n  [0x11001, 0x11001], [0x11038, 0x11046], [0x1107F, 0x11081],\n  [0x110B3, 0x110B6], [0x110B9, 0x110BA], [0x110BD, 0x110BD],\n  [0x110CD, 0x110CD], [0x11100, 0x11102], [0x11127, 0x1112B],\n  [0x1112D, 0x11134], [0x11173, 0x11173], [0x11180, 0x11181],\n  [0x111B6, 0x111BE], [0x111C9, 0x111CC], [0x1122F, 0x11231],\n  [0x11234, 0x11234], [0x11236, 0x11237], [0x1123E, 0x1123E],\n  [0x112DF, 0x112DF], [0x112E3, 0x112EA], [0x11300, 0x11301],\n  [0x1133B, 0x1133C], [0x11340, 0x11340], [0x11366, 0x1136C],\n  [0x11370, 0x11374], [0x11438, 0x1143F], [0x11442, 0x11444],\n  [0x11446, 0x11446], [0x1145E, 0x1145E], [0x114B3, 0x114B8],\n  [0x114BA, 0x114BA], [0x114BF, 0x114C0], [0x114C2, 0x114C3],\n  [0x115B2, 0x115B5], [0x115BC, 0x115BD], [0x115BF, 0x115C0],\n  [0x115DC, 0x115DD], [0x11633, 0x1163A], [0x1163D, 0x1163D],\n  [0x1163F, 0x11640], [0x116AB, 0x116AB], [0x116AD, 0x116AD],\n  [0x116B0, 0x116B5], [0x116B7, 0x116B7], [0x1171D, 0x1171F],\n  [0x11722, 0x11725], [0x11727, 0x1172B], [0x1182F, 0x11837],\n  [0x11839, 0x1183A], [0x119D4, 0x119D7], [0x119DA, 0x119DB],\n  [0x119E0, 0x119E0], [0x11A01, 0x11A0A], [0x11A33, 0x11A38],\n  [0x11A3B, 0x11A3E], [0x11A47, 0x11A47], [0x11A51, 0x11A56],\n  [0x11A59, 0x11A5B], [0x11A8A, 0x11A96], [0x11A98, 0x11A99],\n  [0x11C30, 0x11C36], [0x11C38, 0x11C3D], [0x11C3F, 0x11C3F],\n  [0x11C92, 0x11CA7], [0x11CAA, 0x11CB0], [0x11CB2, 0x11CB3],\n  [0x11CB5, 0x11CB6], [0x11D31, 0x11D36], [0x11D3A, 0x11D3A],\n  [0x11D3C, 0x11D3D], [0x11D3F, 0x11D45], [0x11D47, 0x11D47],\n  [0x11D90, 0x11D91], [0x11D95, 0x11D95], [0x11D97, 0x11D97],\n  [0x11EF3, 0x11EF4], [0x13430, 0x13438], [0x16AF0, 0x16AF4],\n  [0x16B30, 0x16B36], [0x16F4F, 0x16F4F], [0x16F8F, 0x16F92],\n  [0x1BC9D, 0x1BC9E], [0x1BCA0, 0x1BCA3], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0x1DA00, 0x1DA36], [0x1DA3B, 0x1DA6C],\n  [0x1DA75, 0x1DA75], [0x1DA84, 0x1DA84], [0x1DA9B, 0x1DA9F],\n  [0x1DAA1, 0x1DAAF], [0x1E000, 0x1E006], [0x1E008, 0x1E018],\n  [0x1E01B, 0x1E021], [0x1E023, 0x1E024], [0x1E026, 0x1E02A],\n  [0x1E130, 0x1E136], [0x1E2EC, 0x1E2EF], [0x1E8D0, 0x1E8D6],\n  [0x1E944, 0x1E94A], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\nconst BMP_WIDE = [\n  [0x1100, 0x115F], [0x231A, 0x231B], [0x2329, 0x232A],\n  [0x23E9, 0x23EC], [0x23F0, 0x23F0], [0x23F3, 0x23F3],\n  [0x25FD, 0x25FE], [0x2614, 0x2615], [0x2648, 0x2653],\n  [0x267F, 0x267F], [0x2693, 0x2693], [0x26A1, 0x26A1],\n  [0x26AA, 0x26AB], [0x26BD, 0x26BE], [0x26C4, 0x26C5],\n  [0x26CE, 0x26CE], [0x26D4, 0x26D4], [0x26EA, 0x26EA],\n  [0x26F2, 0x26F3], [0x26F5, 0x26F5], [0x26FA, 0x26FA],\n  [0x26FD, 0x26FD], [0x2705, 0x2705], [0x270A, 0x270B],\n  [0x2728, 0x2728], [0x274C, 0x274C], [0x274E, 0x274E],\n  [0x2753, 0x2755], [0x2757, 0x2757], [0x2795, 0x2797],\n  [0x27B0, 0x27B0], [0x27BF, 0x27BF], [0x2B1B, 0x2B1C],\n  [0x2B50, 0x2B50], [0x2B55, 0x2B55], [0x2E80, 0x2E99],\n  [0x2E9B, 0x2EF3], [0x2F00, 0x2FD5], [0x2FF0, 0x2FFB],\n  [0x3000, 0x3029], [0x302E, 0x303E], [0x3041, 0x3096],\n  [0x309B, 0x30FF], [0x3105, 0x312F], [0x3131, 0x318E],\n  [0x3190, 0x31BA], [0x31C0, 0x31E3], [0x31F0, 0x321E],\n  [0x3220, 0x3247], [0x3250, 0x4DBF], [0x4E00, 0xA48C],\n  [0xA490, 0xA4C6], [0xA960, 0xA97C], [0xAC00, 0xD7A3],\n  [0xF900, 0xFAFF], [0xFE10, 0xFE19], [0xFE30, 0xFE52],\n  [0xFE54, 0xFE66], [0xFE68, 0xFE6B], [0xFF01, 0xFF60],\n  [0xFFE0, 0xFFE6]\n];\nconst HIGH_WIDE = [\n  [0x16FE0, 0x16FE3], [0x17000, 0x187F7],\n  [0x18800, 0x18AF2], [0x1B000, 0x1B11E], [0x1B150, 0x1B152],\n  [0x1B164, 0x1B167], [0x1B170, 0x1B2FB], [0x1F004, 0x1F004],\n  [0x1F0CF, 0x1F0CF], [0x1F18E, 0x1F18E], [0x1F191, 0x1F19A],\n  [0x1F200, 0x1F202], [0x1F210, 0x1F23B], [0x1F240, 0x1F248],\n  [0x1F250, 0x1F251], [0x1F260, 0x1F265], [0x1F300, 0x1F320],\n  [0x1F32D, 0x1F335], [0x1F337, 0x1F37C], [0x1F37E, 0x1F393],\n  [0x1F3A0, 0x1F3CA], [0x1F3CF, 0x1F3D3], [0x1F3E0, 0x1F3F0],\n  [0x1F3F4, 0x1F3F4], [0x1F3F8, 0x1F43E], [0x1F440, 0x1F440],\n  [0x1F442, 0x1F4FC], [0x1F4FF, 0x1F53D], [0x1F54B, 0x1F54E],\n  [0x1F550, 0x1F567], [0x1F57A, 0x1F57A], [0x1F595, 0x1F596],\n  [0x1F5A4, 0x1F5A4], [0x1F5FB, 0x1F64F], [0x1F680, 0x1F6C5],\n  [0x1F6CC, 0x1F6CC], [0x1F6D0, 0x1F6D2], [0x1F6D5, 0x1F6D5],\n  [0x1F6EB, 0x1F6EC], [0x1F6F4, 0x1F6FA], [0x1F7E0, 0x1F7EB],\n  [0x1F90D, 0x1F971], [0x1F973, 0x1F976], [0x1F97A, 0x1F9A2],\n  [0x1F9A5, 0x1F9AA], [0x1F9AE, 0x1F9CA], [0x1F9CD, 0x1F9FF],\n  [0x1FA70, 0x1FA73], [0x1FA78, 0x1FA7A], [0x1FA80, 0x1FA82],\n  [0x1FA90, 0x1FA95], [0x20000, 0x2FFFD], [0x30000, 0x3FFFD]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\n\nexport class UnicodeV11 implements IUnicodeVersionProvider {\n  public readonly version = '11';\n\n  constructor() {\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n      for (let r = 0; r < BMP_WIDE.length; ++r) {\n        fill(table, 2, BMP_WIDE[r][0], BMP_WIDE[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if (bisearch(num, HIGH_WIDE)) return 2;\n    return 1;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * UnicodeVersionProvider for V11.\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { UnicodeV11 } from './UnicodeV11';\n\n\nexport class Unicode11Addon implements ITerminalAddon {\n  public activate(terminal: Terminal): void {\n    terminal.unicode.register(new UnicodeV11());\n  }\n  public dispose(): void { }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebLinksAddon\"] = factory();\n\telse\n\t\troot[\"WebLinksAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkProvider, ILink, Terminal, IViewportRange } from 'xterm';\n\ninterface ILinkProviderOptions {\n  hover?(event: MouseEvent, text: string, location: IViewportRange): void;\n  leave?(event: MouseEvent, text: string): void;\n}\n\nexport class WebLinkProvider implements ILinkProvider {\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _regex: RegExp,\n    private readonly _handler: (event: MouseEvent, uri: string) => void,\n    private readonly _options: ILinkProviderOptions = {}\n  ) {\n\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const links = LinkComputer.computeLink(y, this._regex, this._terminal, this._handler);\n    callback(this._addCallbacks(links));\n  }\n\n  private _addCallbacks(links: ILink[]): ILink[] {\n    return links.map(link => {\n      link.leave = this._options.leave;\n      link.hover = (event: MouseEvent, uri: string): void => {\n        if (this._options.hover) {\n          const { range } = link;\n          this._options.hover(event, uri, range);\n        }\n      };\n      return link;\n    });\n  }\n}\n\nexport class LinkComputer {\n  public static computeLink(y: number, regex: RegExp, terminal: Terminal, activate: (event: MouseEvent, uri: string) => void): ILink[] {\n    const rex = new RegExp(regex.source, (regex.flags || '') + 'g');\n\n    const [line, startLineIndex] = LinkComputer._translateBufferLineToStringWithWrap(y - 1, false, terminal);\n\n    let match;\n    let stringIndex = -1;\n    const result: ILink[] = [];\n\n    while ((match = rex.exec(line)) !== null) {\n      const text = match[1];\n      if (!text) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        console.log('match found without corresponding matchIndex');\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = line.indexOf(text, stringIndex + 1);\n      rex.lastIndex = stringIndex + text.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      let endX = stringIndex + text.length;\n      let endY = startLineIndex + 1;\n\n      while (endX > terminal.cols) {\n        endX -= terminal.cols;\n        endY++;\n      }\n\n      const range = {\n        start: {\n          x: stringIndex + 1,\n          y: startLineIndex + 1\n        },\n        end: {\n          x: endX,\n          y: endY\n        }\n      };\n\n      result.push({ range, text, activate });\n    }\n\n    return result;\n  }\n\n  /**\n   * Gets the entire line for the buffer line\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param terminal The terminal\n   */\n  private static _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean, terminal: Terminal): [string, number] {\n    let lineString = '';\n    let lineWrapsToNext: boolean;\n    let prevLinesToWrap: boolean;\n\n    do {\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n\n      if (line.isWrapped) {\n        lineIndex--;\n      }\n\n      prevLinesToWrap = line.isWrapped;\n    } while (prevLinesToWrap);\n\n    const startLineIndex = lineIndex;\n\n    do {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const line = terminal.buffer.active.getLine(lineIndex);\n      if (!line) {\n        break;\n      }\n      lineString += line.translateToString(!lineWrapsToNext && trimRight).substring(0, terminal.cols);\n      lineIndex++;\n    } while (lineWrapsToNext);\n\n    return [lineString, startLineIndex];\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ILinkMatcherOptions, ITerminalAddon, IDisposable, IViewportRange } from 'xterm';\nimport { WebLinkProvider } from './WebLinkProvider';\n\nconst protocolClause = '(https?:\\\\/\\\\/)';\nconst domainCharacterSet = '[\\\\da-z\\\\.-]+';\nconst negatedDomainCharacterSet = '[^\\\\da-z\\\\.-]+';\nconst domainBodyClause = '(' + domainCharacterSet + ')';\nconst tldClause = '([a-z\\\\.]{2,18})';\nconst ipClause = '((\\\\d{1,3}\\\\.){3}\\\\d{1,3})';\nconst localHostClause = '(localhost)';\nconst portClause = '(:\\\\d{1,5})';\nconst hostClause = '((' + domainBodyClause + '\\\\.' + tldClause + ')|' + ipClause + '|' + localHostClause + ')' + portClause + '?';\nconst pathCharacterSet = '(\\\\/[\\\\/\\\\w\\\\.\\\\-%~:+@]*)*([^:\"\\'\\\\s])';\nconst pathClause = '(' + pathCharacterSet + ')?';\nconst queryStringHashFragmentCharacterSet = '[0-9\\\\w\\\\[\\\\]\\\\(\\\\)\\\\/\\\\?\\\\!#@$%&\\'*+,:;~\\\\=\\\\.\\\\-]*';\nconst queryStringClause = '(\\\\?' + queryStringHashFragmentCharacterSet + ')?';\nconst hashFragmentClause = '(#' + queryStringHashFragmentCharacterSet + ')?';\nconst negatedPathCharacterSet = '[^\\\\/\\\\w\\\\.\\\\-%]+';\nconst bodyClause = hostClause + pathClause + queryStringClause + hashFragmentClause;\nconst start = '(?:^|' + negatedDomainCharacterSet + ')(';\nconst end = ')($|' + negatedPathCharacterSet + ')';\nconst strictUrlRegex = new RegExp(start + protocolClause + bodyClause + end);\n\nfunction handleLink(event: MouseEvent, uri: string): void {\n  const newWindow = window.open();\n  if (newWindow) {\n    try {\n      newWindow.opener = null;\n    } catch {\n      // no-op, Electron can throw\n    }\n    newWindow.location.href = uri;\n  } else {\n    console.warn('Opening link blocked as opener could not be cleared');\n  }\n}\n\ninterface ILinkProviderOptions {\n  hover?(event: MouseEvent, text: string, location: IViewportRange): void;\n  leave?(event: MouseEvent, text: string): void;\n  urlRegex?: RegExp;\n}\n\nexport class WebLinksAddon implements ITerminalAddon {\n  private _linkMatcherId: number | undefined;\n  private _terminal: Terminal | undefined;\n  private _linkProvider: IDisposable | undefined;\n\n  constructor(\n    private _handler: (event: MouseEvent, uri: string) => void = handleLink,\n    private _options: ILinkMatcherOptions | ILinkProviderOptions = {},\n    private _useLinkProvider: boolean = false\n  ) {\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n\n    if (this._useLinkProvider && 'registerLinkProvider' in this._terminal) {\n      const options = this._options as ILinkProviderOptions;\n      const regex = options.urlRegex || strictUrlRegex;\n      this._linkProvider = this._terminal.registerLinkProvider(new WebLinkProvider(this._terminal, regex, this._handler, options));\n    } else {\n      // TODO: This should be removed eventually\n      const options = this._options as ILinkMatcherOptions;\n      options.matchIndex = 1;\n      this._linkMatcherId = (this._terminal as Terminal).registerLinkMatcher(strictUrlRegex, this._handler, options);\n    }\n  }\n\n  public dispose(): void {\n    if (this._linkMatcherId !== undefined && this._terminal !== undefined) {\n      this._terminal.deregisterLinkMatcher(this._linkMatcherId);\n    }\n\n    this._linkProvider?.dispose();\n  }\n}\n","import { Terminal } from 'xterm'\nimport { AttachAddon } from 'xterm-addon-attach'\nimport { FitAddon } from 'xterm-addon-fit'\nimport { SerializeAddon } from 'xterm-addon-serialize'\nimport { Unicode11Addon } from 'xterm-addon-unicode11'\nimport { WebLinksAddon } from 'xterm-addon-web-links'\n\nconst terminal = new Terminal({\n  screenKeys: true,\n  useStyle: true,\n  cursorBlink: true,\n  fullscreenWin: true,\n  maximizeWin: true,\n  screenReaderMode: true,\n  cols: 128,\n});\nterminal.open(document.getElementById(\"terminal\"));\nconst url = new URL(location);\nurl.protocol = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\nif (!url.pathname.endsWith(\"/\")) url.pathname += \"/\";\nurl.pathname += \"attach\";\nconst ws = new WebSocket(url);\nconst attachAddon = new AttachAddon(ws);\nvar fitAddon = new FitAddon();\nterminal.loadAddon(fitAddon);\nvar webLinksAddon = new WebLinksAddon();\nterminal.loadAddon(webLinksAddon);\nvar unicode11Addon = new Unicode11Addon();\nterminal.loadAddon(unicode11Addon);\nvar serializeAddon = new SerializeAddon();\nterminal.loadAddon(serializeAddon);\nws.onclose = function (event) {\n  console.log(event);\n  terminal.write(\n    \"\\r\\n\\nconnection has been terminated from the server-side (hit refresh to restart)\\n\\r\"\n  );\n};\nws.onopen = function () {\n  terminal.loadAddon(attachAddon);\n  terminal._initialized = true;\n  terminal.focus();\n  setTimeout(function () {\n    fitAddon.fit();\n  });\n  terminal.onResize(function (event) {\n    var rows = event.rows;\n    var cols = event.cols;\n    var size = JSON.stringify({ cols: cols, rows: rows + 1 });\n    var send = new TextEncoder().encode(\"\\x01\" + size);\n    console.log(\"resizing to\", size);\n    ws.send(send);\n  });\n  terminal.onTitleChange(function (event) {\n    console.log(event);\n  });\n  window.onresize = function () {\n    fitAddon.fit();\n  };\n};\n"],"names":["t1","self","o1","r1","s1","a1","c","l","h","u","f","e4","t4","_terminal","_renderService","i","call","this","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","n1","prototype","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","t","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","a","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","t2","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","t5","r2","i2","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","n2","o2","rightClickHandler","shouldSelectWord","rightClickSelect","select","channels","i3","rgb","rgba","toPaddedHex","s","contrastRatio","l1","l2","t6","toCss","r","g","b","e7","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","n","toColorRGB","parseInt","slice","e8","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","t7","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","e9","bgL","fgL","t8","i4","s2","a2","r4","e11","_color","_rgba","clear","setCss","getCss","setColor","getColor","t9","ColorContrastCache","n4","r5","o4","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","t10","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","u1","e13","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","i5","fallback","fillStyle","console","warn","fillRect","data","getImageData","o","substring","split","map","component","Number","alpha","e14","ColorManager","t11","arguments","elements","parentElement","t12","node","type","handler","options","disposed","o5","r6","s4","a4","e18","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","defineProperty","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","i6","n5","IBufferService","ILogService","IUnicodeService","t13","c2","clickCallback","hoverCallback","a6","r7","c3","e23","t17","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","n6","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","r8","forEach","reply","linkWithState","Map","linkProvided","s6","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","o6","s5","Linkifier2","t15","promptLabel","a7","r12","e30","t21","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","undefined","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","n7","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","o7","s7","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","t19","r13","e32","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","t22","RenderDebouncer","e35","t25","apply","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","r14","t23","o8","r15","s8","a8","l3","_","d","p","m","S","C","w","L","E","k","M","A","R","O","T","D","B","I","e38","t28","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","decorationService","DecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","n8","_colorManager","req","acc","ident","C0","ESC","toRgbString","BEL","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","e40","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","t26","Terminal","r17","e43","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","t32","a9","r18","l4","h2","e46","t35","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","n10","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","o10","s10","t33","o11","r19","s11","a10","e48","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","i12","n11","ICoreService","t36","getCoordsRelativeToElement","rect","t37","r20","colCount","hasValidCharSize","isSelection","i13","r21","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","t38","moveToCellSequence","targetX","rowDifference","currX","n14","r25","o13","s15","a13","CONSTRUCTOR_ONLY_OPTIONS","e56","_core","_addonManager","AddonManager","_publicOptions","i17","getter","propName","setter","_checkReadonlyOptions","desc","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","t42","i18","r27","n15","o14","s16","a14","c5","l6","h5","u3","e59","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","t43","BaseRenderLayer","a15","r28","l7","h6","BLINK_INTERVAL","e62","t46","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","n16","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","o15","s17","CursorRenderLayer","t44","e63","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","u4","time","setInterval","wt","r29","t47","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","i20","n17","o16","s18","a16","c6","l8","h7","u5","f2","_1","d1","p1","v1","g1","m1","S1","xp","yp","P","H","F","W","U","q","N","z","K","G","V","X","Y","Z","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ge","ye","me","Se","Ce","be","we","Le","Ee","xe","ke","Me","Ae","Re","Oe","Te","De","Be","Pe","Ie","He","Fe","je","We","Ue","qe","Ne","ze","Ke","Ge","Ve","Xe","Ye","Ze","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","charDefinition","xOffset","mt","yOffset","cachedPatterns","St","patternSet","Ct","bt","o17","s19","a17","tmpCanvas","tmpCtx","imageData","ImageData","r30","startsWith","substr","Et","parseFloat","putImageData","pattern","createPattern","boxDrawingDefinition","entries","instructions","e67","instruction","e66","args","error","stroke","closePath","clamp","svgToCanvasInstructionMap","bezierCurveTo","lineTo","moveTo","Mt","translateArgs","i21","n18","xt","cache","r31","GridCache","Reflect","decorate","onShowLinkUnderline","onHideLinkUnderline","s20","__param","r32","e73","t51","is256Color","LinkRenderLayer","instantiationService","nextRendererId","_renderLayers","TextRenderLayer","_2","_id","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","t54","e76","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","t55","e80","_didStateChange","viewportEndRow","t57","viewportCappedStartRow","viewportCappedEndRow","viewportStartRow","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","t58","c10","r35","l12","terminalFont","u7","e83","_forEachCell","firstRow","lastRow","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","nextFillStyle","isBgPalette","prevFillStyle","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","t60","hasOwnProperty","measureText","overlaps","_didWarmUp","_doWarmUp","o21","s23","f4","BaseCharAtlas","charAtlasCache","generateConfig","entry","ownedBy","configEquals","atlas","e87","t63","DynamicCharAtlas","newConfig","config","newEntry","e88","clonedColors","concat","i26","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","i27","e90","t66","TEXTURE_WIDTH","TEXTURE_HEIGHT","TypeError","constructor","glyph","create","_config","_drawToCacheCount","NoneCharAtlas","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","s24","_cacheCanvas","l13","r38","h9","_tmpCtx","_width","_height","_cacheMap","LRUMap","prealloc","capacity","_cacheCtx","n24","t67","_canCache","getGlyphCacheKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","a22","fontStyle","isEmpty","o22","offset","inBitmap","_addGlyphToBitmap","isSafari","_generateBitmap","createImageBitmap","then","bitmap","_map","_head","_tail","_unlinkNode","prev","_appendNode","tail","_nodePool","nodePool","e93","head","peekValue","BG_CLASS_PREFIX","FOCUS_CLASS","_linkifier","t69","_terminalClass","h10","t71","e96","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_linkifier2","a23","TERMINAL_CLASS_PREFIX","_themeStyleElement","_dimensionsStyleElement","n25","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","FG_CLASS_PREFIX","c12","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","_setCellUnderline","span","textDecoration","enumerable","configurable","n26","DIM_CLASS","t72","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","o24","r41","s26","h11","f6","isCursorRow","joinedRanges","charElement","display","_applyMinimumContrast","_addStyle","padStart","isSelectAllActive","selectionStartLength","e99","t73","SelectionModel","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","n27","t74","o25","r42","a25","e102","_parentElement","_result","_measureElement","i30","e103","geometry","combinedData","firstCell","isCombined","t75","a26","r43","c14","l15","h12","setFromCharData","t77","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","e106","rangeStartColumn","currentStringIndex","getTrimmedLength","rangeAttrBG","_getJoinedRanges","lineStr","ranges","rangeStartStringIndex","rangeAttrFG","getBg","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","allJoinedRanges","currentRangeStarted","currentRange","currentRangeIndex","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_decorations","t78","Decoration","e112","n29","t80","marker","isDisposed","onDispose","decoration","_queueRefresh","render","shouldRecreate","_onDispose","_marker","anchor","o27","s29","e113","t81","a27","_createElement","append","_refreshStyle","right","t82","r45","s30","e115","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","l16","r46","f8","_onRefreshRequest","t85","_renderDebouncer","_fullRefresh","a29","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","e118","NON_BREAKING_SPACE_CHAR","_dragScrollAmount","_enabled","c15","r47","h13","u11","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","l17","_mouseUpListener","onUserInput","_trimListener","_onBufferActivate","_activeSelectionMode","_onMouseUp","_onTrim","_model","_removeMouseDownListeners","t89","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","e123","ALL_NON_BREAKING_SPACE_REGEX","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","v2","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","_selectToWordAt","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesBelow","leftLongCharOffset","charAt","leftWideCharCount","rightWideCharCount","_isCharWordSeparator","rightLongCharOffset","charOffset","trim","previousBufferLine","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","getWrappedRangeForLine","o30","s32","f9","createDecorator","p2","t87","IDecorationService","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","n33","audioContext","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","e126","binaryString","base64","Uint8Array","len","charCodeAt","bytes","dataURI","destination","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_maxLength","_startIndex","_length","o31","t90","s33","r49","i37","n34","e128","Array","newMaxLength","_getCyclicIndex","newArray","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","val","depth","isArray","clone","clonedObject","e131","t94","_onBinary","_onData","_onLineFeed","r50","InstantiationService","OptionsService","t95","BufferService","LogService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","e132","_onScrollApi","_windowsMode","writeSync","LogLevelEnum","WARN","hasWriteSyncWarnHappened","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scroll","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","e133","_event","_disposed","t93","e134","t97","e135","arg2","queue","from","i38","e138","t99","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","t98","setWinSizePixels","o32","s34","r52","raiseWin","c16","l18","lowerWin","f10","refreshWin","d4","p3","setWinSizeChars","maximizeWin","S2","C1","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","subarray","unhook","utf32ToString","e139","EscapeSequenceParser","_coreMouseService","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","r53","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_parseBuffer","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_4","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","insertChars","intermediates","scrollLeft","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","scrollDown","eraseChars","cursorBackwardTab","deleteChars","charPosAbsolute","scrollUp","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","hVPosition","tabClear","setMode","vPositionRelative","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","VT","carriageReturn","BS","backspace","LF","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","OscHandler","setIconName","setTitle","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","a31","t100","_preserveStack","_logSlowResolvingAsync","Promise","race","res","catch","err","parse","DEBUG","wasPaused","clearRange","e142","decode","print","chWidth","curAttr","markDirty","bufferRow","setCellFromCodePoint","wcwidth","charset","ch","stringFromCodePoint","extended","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","e143","convertEol","_restrictCursor","nextStop","originalX","maxCol","_setCursor","_moveCursor","cursorUp","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","scrollBackSize","scrollBottomAbsolute","deleteCells","_is","termName","setModePrivate","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","c1","mode","cSpace","advance","getSubParams","accu","underlineColor","_processUnderline","underlineStyle","updateExtended","hasSubParams","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","parseColor","_setOrReportSpecialColor","collectAndFlag","level","fill","markAllDirty","_disposables","t102","unregister","e145","disposables","array","isNode","navigator","userAgent","platform","r54","test","isIpad","isIphone","fillFallback","e146","t103","r55","lastChar","CHAR_DATA_CODE_INDEX","e147","ExtendedAttrs","fromColorRGB","newObj","t105","e149","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","e150","_hasScrollback","t106","r57","i39","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","CircularList","_getCorrectBufferLength","s35","getWhitespaceCell","BufferLine","maxLength","h15","relativeY","e152","correctBufferLength","fillViewportRows","fillAttr","newCols","nullCell","newRows","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowSmaller","_reflowLarger","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","wrappedLines","n36","absoluteY","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","toInsert","countToInsert","a32","destLineIndex","srcLineIndex","srcCol","copyCellsFrom","cellsToCopy","destCol","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","viewportAdjustments","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","nextI","insertEvents","countInsertedSoFar","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","last","tabStopWidth","Marker","onTrim","onInsert","onDelete","e153","_removeMarker","startOverscan","BufferStringIterator","Buffer","_trimRight","_endOverscan","_endIndex","_startOverscan","_current","e154","_combined","_extendedAttrs","t107","i40","r58","n37","o34","s36","e156","CHAR_DATA_ATTR_INDEX","eAttrs","codePoint","fillCellData","keys","copyFrom","applyInReverse","srcCombinedKeys","cp","e157","t108","followingLineStartsWithWide","e158","t109","r59","bufferAbsoluteY","toRemove","srcTrimmedTineLength","countToRemove","nextToRemoveIndex","countRemovedSoFar","nextToRemoveStart","newLayout","newLayoutLines","oldCols","newLineLengths","cellsNeeded","reduce","cellsAvailable","oldTrimmedLength","srcLine","lineLength","i41","e161","t112","t111","BufferSet","_normal","inactiveBuffer","t113","_alt","i42","e164","t115","obj","t114","r61","e165","t116","DEFAULT_ATTR","i43","_nextId","r62","t117","NUL","SOH","STX","EOT","ACK","HT","DLE","DC1","DC2","DC3","NAK","SYN","ETB","CAN","EM","SUB","SP","DEL","PAD","HOP","BPH","NBH","HTJ","VTS","PLU","SS2","SS3","PU1","PU2","STS","CCH","MW","SPA","EPA","ENQ","SOS","SGCI","SCI","CSI","ST","OSC","FF","KEYCODE_KEY_MAPPINGS","FS","GS","RS","US","SSA","ESA","PLD","RI","DCS","applicationCursorMode","e168","t119","r63","modifiers","keyMapping","codepoint","_interim","t120","startPos","r64","e170","interim","byte3","tmp","missing","discardInterim","i44","e171","fourStop","byte2","byte4","byte1","table","BMP_COMBINING","e172","t121","r65","UnicodeV6","i45","n39","version","ucs","mid","bisearch","num","HIGH_COMBINING","queueMicrotask","resolve","cb","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","e174","_syncCalls","maxSubsequentCalls","e175","chunk","t122","e176","_innerWrite","lastTime","startTime","qmt","HASH_REX","pad","toLowerCase","low","i46","base","e178","t123","n40","adv","bits","PAYLOAD_LIMIT","_handlers","_active","EMPTY_HANDLERS","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","e179","t124","r68","handlerIndex","clearHandler","setHandlerFallback","e180","e181","put","handlerResult","success","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","n41","e182","e185","t126","i49","setPrototypeOf","__proto__","setDefault","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","t125","EXECUTABLES","r69","a34","c18","PRINTABLES","states","addMany","e186","r70","t127","e187","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","f12","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","n42","r71","e188","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","e189","clearCsiHandler","clearDcsHandler","e190","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","o35","t128","i50","r72","e193","_start","_put","e192","MAX_VALUE","e194","maxSubParamsLength","n43","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","newParams","e197","getSubParamsAll","store","cur","_addons","terminal","loadedAddon","instance","_wrappedAddonDispose","e198","t130","init","e199","t131","BufferApiView","e201","getLine","BufferLineApiView","_line","getCell","e202","t132","_onBufferChange","_alternate","e203","t133","e205","alternate","addCsiHandler","addDcsHandler","e206","t134","addEscHandler","e208","addOscHandler","e207","e209","provider","versions","activeVersion","__decorate","isUserScrolling","s38","t135","r77","e214","r78","_cachedBlankLine","bottomRow","willBufferBeTrimmed","isFull","scrollRegionHeight","oldYdisp","scrollAmount","glevel","_charsets","e216","NONE","restrict","e217","t138","r79","i53","X10","ANY","n45","isSGR","o37","DEFAULT","SGR","eventCode","_protocols","_encodings","c19","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","l21","addEncoding","DEFAULT_ENCODINGS","protocol","name","encoding","e218","a36","_compareEvents","triggerBinaryEvent","report","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","a37","r80","e221","t141","wasUserInput","disableStdin","e222","CoreService","t139","_end","n47","t142","e225","_entries","i55","service","s41","ServiceCollection","t143","_services","getService","ctor","e227","getServiceDependencies","dependency","s42","e228","serviceDependencies","firstServiceArgPos","serviceArgs","t144","INFO","ERROR","off","OFF","n49","_updateLogLevel","_evalLazyOptionalParams","optionalParams","t145","r83","a39","s43","e231","e232","log","_log","message","o41","DEFAULT_BELL_SOUND","i57","e233","t146","r84","i58","__assign","assign","DEFAULT_OPTIONS","n50","o42","altClickMovesCursor","_sanitizeAndValidateOption","defaultOptions","_setupOptions","_onOptionChange","e234","e235","r85","i59","s44","serviceRegistry","decorator","di$target","t147","e237","r86","ICharsetService","_providers","_onChange","_activeProvider","e238","t148","r87","n51","e239","__webpack_module_cache__","cachedModule","exports","module","moduleId","o43","installedModules","__webpack_require__","modules","Symbol","toStringTag","__esModule","ns","default","object","property","t3","socket","_socket","binaryType","_bidirectional","bidirectional","addSocketListener","_sendData","_sendBinary","readyState","send","e3","AttachAddon","fit","dims","proposeDimensions","core","parentElementStyle","parentElementHeight","getPropertyValue","parentElementWidth","availableHeight","availableWidth","FitAddon","__webpack_modules__","__webpack_exports__","constrain","high","serialize","cell1","cell2","oldCell","_beforeSerialize","startLineColumn","endLineColumn","_nextCell","_afterSerialize","_serializeString","isLastRow","equalFg","equalBg","equalFlags","_rowIndex","_allRows","_allRowSeparators","_currentRow","_nullCellCount","_cursorStyle","_cursorStyleRow","_cursorStyleCol","_backgroundCell","_firstRow","_lastCursorRow","_lastCursorCol","_lastContentCursorRow","_lastContentCursorCol","_this","_thisRowLastChar","_thisRowLastSecondChar","_nextRowFirstChar","i1","rowSeparator","currentLine","thisRowLastChar","thisRowLastSecondChar","nextRowFirstChar","isNextRowFirstCharDoubleWidth","_diffStyle","sgrSeq","fgChanged","bgChanged","flagsChanged","isEmptyCell","realCursorRow","baseY","realCursorCol","BaseSerializeHandler","h1","_serializeBuffer","maxRows","StringSerializeHandler","correctRows","_serializeBufferAsHTML","HTMLSerializeHandler","onlySelection","_serializeModes","excludeAltBuffer","excludeModes","serializeAsHTML","SerializeAddon","_options","_htmlContent","_padStart","targetLength","padString","includeGlobalBackground","globalStyleDefinitions","_getHexColor","isFg","fgHexColor","bgHexColor","styleDefinitions","BMP_WIDE","HIGH_WIDE","UnicodeV11","n3","e5","Unicode11Addon","unicode","_regex","LinkComputer","computeLink","_addCallbacks","WebLinkProvider","_translateBufferLineToStringWithWrap","startLineIndex","endY","lineWrapsToNext","prevLinesToWrap","lineString","strictUrlRegex","handleLink","_useLinkProvider","urlRegex","_linkProvider","_linkMatcherId","e6","WebLinksAddon","$d55f71ec373317b3$var$terminal","$351cfa375e34b09c$exports","screenKeys","useStyle","getElementById","$d55f71ec373317b3$var$url","URL","pathname","endsWith","$d55f71ec373317b3$var$ws","WebSocket","$d55f71ec373317b3$var$attachAddon","$7326fb7a3e662190$exports","$d55f71ec373317b3$var$fitAddon","$db06bd1eb93468bc$exports","$d55f71ec373317b3$var$webLinksAddon","$6f8c350dd5fd5509$exports","$d55f71ec373317b3$var$unicode11Addon","$e93e7289992e8fe2$exports","$d55f71ec373317b3$var$serializeAddon","$a345d1e43d271bdc$exports","onclose","onopen","_initialized","JSON","stringify","TextEncoder","encode","onresize"],"version":3,"file":"index.83453160.js.map"}